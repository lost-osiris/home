'use babel';
'use strict';

function rippleClick(event) {
    var item = event.target;

    if (!item) return;

    var rect = item.getBoundingClientRect();
    var x = (event.clientX || 80) - rect.left;
    var y = (event.clientY || 24) - rect.top;
    var ink = undefined;

    if (item.querySelectorAll('.ink').length === 0) {
        ink = document.createElement('span');

        ink.classList.add('ink');
        item.appendChild(ink);
    }

    ink = item.querySelector('.ink');
    ink.style.left = x + 'px';
    ink.style.top = y + 'px';

    setTimeout(function () {
        if (ink && ink.parentElement) {
            ink.parentElement.removeChild(ink);
        }
    }, 1000);
}

function apply() {
    var tabs = document.querySelectorAll('.tab-bar');

    // Ripple Effect for Tabs
    if (tabs) {
        Array.from(tabs).forEach(function (tab) {
            tab.removeEventListener('click', rippleClick);
            tab.addEventListener('click', rippleClick);

            atom.workspace.onDidChangeActivePaneItem(function () {
                var activeTab = document.querySelector('.tab-bar .tab.active');

                if (activeTab && activeTab.click) {
                    activeTab.click();
                }
            });
        });
    }
}

atom.workspace.onDidAddPane(function () {
    setImmediate(function () {
        return apply();
    });
});

module.exports = { apply: apply };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21vd2Vucy8uYXRvbS9wYWNrYWdlcy9hdG9tLW1hdGVyaWFsLXVpL2xpYi90YWJzLXNldHRpbmdzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsQ0FBQztBQUNaLFlBQVksQ0FBQzs7QUFFYixTQUFTLFdBQVcsQ0FBQyxLQUFLLEVBQUU7QUFDeEIsUUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQzs7QUFFeEIsUUFBSSxDQUFDLElBQUksRUFBRSxPQUFPOztBQUVsQixRQUFNLElBQUksR0FBRyxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztBQUMxQyxRQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFBLEdBQUksSUFBSSxDQUFDLElBQUksQ0FBQztBQUM1QyxRQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQztBQUMzQyxRQUFJLEdBQUcsWUFBQSxDQUFDOztBQUVSLFFBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7QUFDNUMsV0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7O0FBRXJDLFdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFlBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDekI7O0FBRUQsT0FBRyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDakMsT0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztBQUMxQixPQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDOztBQUV6QixjQUFVLENBQUMsWUFBTTtBQUNiLFlBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxhQUFhLEVBQUU7QUFDMUIsZUFBRyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDdEM7S0FDSixFQUFFLElBQUksQ0FBQyxDQUFDO0NBQ1o7O0FBRUQsU0FBUyxLQUFLLEdBQUc7QUFDYixRQUFJLElBQUksR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7OztBQUdqRCxRQUFJLElBQUksRUFBRTtBQUNOLGFBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRyxFQUFLO0FBQzlCLGVBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDOUMsZUFBRyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQzs7QUFFM0MsZ0JBQUksQ0FBQyxTQUFTLENBQUMseUJBQXlCLENBQUMsWUFBTTtBQUMzQyxvQkFBSSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDOztBQUUvRCxvQkFBSSxTQUFTLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRTtBQUM5Qiw2QkFBUyxDQUFDLEtBQUssRUFBRSxDQUFDO2lCQUNyQjthQUNKLENBQUMsQ0FBQztTQUNOLENBQUMsQ0FBQztLQUNOO0NBQ0o7O0FBRUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsWUFBTTtBQUM5QixnQkFBWSxDQUFDO2VBQU0sS0FBSyxFQUFFO0tBQUEsQ0FBQyxDQUFDO0NBQy9CLENBQUMsQ0FBQzs7QUFFSCxNQUFNLENBQUMsT0FBTyxHQUFHLEVBQUUsS0FBSyxFQUFMLEtBQUssRUFBRSxDQUFDIiwiZmlsZSI6Ii9ob21lL21vd2Vucy8uYXRvbS9wYWNrYWdlcy9hdG9tLW1hdGVyaWFsLXVpL2xpYi90YWJzLXNldHRpbmdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIHJpcHBsZUNsaWNrKGV2ZW50KSB7XG4gICAgdmFyIGl0ZW0gPSBldmVudC50YXJnZXQ7XG5cbiAgICBpZiAoIWl0ZW0pIHJldHVybjtcblxuICAgIGNvbnN0IHJlY3QgPSBpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHggPSAoZXZlbnQuY2xpZW50WCB8fCA4MCkgLSByZWN0LmxlZnQ7XG4gICAgY29uc3QgeSA9IChldmVudC5jbGllbnRZIHx8IDI0KSAtIHJlY3QudG9wO1xuICAgIGxldCBpbms7XG5cbiAgICBpZiAoaXRlbS5xdWVyeVNlbGVjdG9yQWxsKCcuaW5rJykubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblxuICAgICAgICBpbmsuY2xhc3NMaXN0LmFkZCgnaW5rJyk7XG4gICAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoaW5rKTtcbiAgICB9XG5cbiAgICBpbmsgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5pbmsnKTtcbiAgICBpbmsuc3R5bGUubGVmdCA9IHggKyAncHgnO1xuICAgIGluay5zdHlsZS50b3AgPSB5ICsgJ3B4JztcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBpZiAoaW5rICYmIGluay5wYXJlbnRFbGVtZW50KSB7XG4gICAgICAgICAgICBpbmsucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChpbmspO1xuICAgICAgICB9XG4gICAgfSwgMTAwMCk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5KCkge1xuICAgIHZhciB0YWJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhYi1iYXInKTtcblxuICAgIC8vIFJpcHBsZSBFZmZlY3QgZm9yIFRhYnNcbiAgICBpZiAodGFicykge1xuICAgICAgICBBcnJheS5mcm9tKHRhYnMpLmZvckVhY2goKHRhYikgPT4ge1xuICAgICAgICAgICAgdGFiLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmlwcGxlQ2xpY2spO1xuICAgICAgICAgICAgdGFiLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmlwcGxlQ2xpY2spO1xuXG4gICAgICAgICAgICBhdG9tLndvcmtzcGFjZS5vbkRpZENoYW5nZUFjdGl2ZVBhbmVJdGVtKCgpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgYWN0aXZlVGFiID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhYi1iYXIgLnRhYi5hY3RpdmUnKTtcblxuICAgICAgICAgICAgICAgIGlmIChhY3RpdmVUYWIgJiYgYWN0aXZlVGFiLmNsaWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVRhYi5jbGljaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmF0b20ud29ya3NwYWNlLm9uRGlkQWRkUGFuZSgoKSA9PiB7XG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IGFwcGx5KCkpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0geyBhcHBseSB9O1xuIl19